name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout Terraform repository
        uses: actions/checkout@v2
        with:
          repository: stemdo-labs/terraform-miriam
          path: terraform-repo

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        working-directory: ./terraform-repo
        run: terraform init

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        working-directory: ./terraform-repo
        run: |
          terraform plan -no-color -out=plan.tfout \
          -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Post Plan result as PR comment
        if: github.event_name == 'pull_request'
        id: tfplan
        working-directory: ./terraform-repo
        run: |
          terraform show -json plan.tfout > plan.json
          PLAN=$(terraform show -no-color plan.tfout)
          echo "Plan output: $PLAN"
          echo "::set-output name=plan::$PLAN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # token-terraform

      - name: Create PR comment with plan
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # token-terraform
          header: "Terraform Plan"
          message: ${{ steps.tfplan.outputs.plan }}

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: ./terraform-repo
        run: |
          terraform apply -auto-approve \
          -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./terraform-repo
        run: |
          terraform destroy -auto-approve \
          -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"
