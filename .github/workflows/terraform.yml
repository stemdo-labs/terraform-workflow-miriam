name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: terraform-ops
  cancel-in-progress: true

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio del workflow
      - name: Checkout repository
        uses: actions/checkout@v2

      # Clonar el repositorio que contiene los archivos .tf en un subdirectorio 'terraform-files'
      - name: Checkout Terraform repository
        uses: actions/checkout@v2
        with:
          repository: stemdo-labs/terraform-miriam
          path: terraform-files

      # Configurar Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.6

      # Inicializar Terraform desde el subdirectorio donde se clonaron los archivos .tf
      - name: Terraform Init
        working-directory: ./terraform-files
        run: |
          terraform init

      # Planear cambios
      - name: Terraform Plan
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
        working-directory: ./terraform-files
        run: |
          terraform plan -lock=false -out=tfplan
          terraform show -no-color tfplan > plan.txt

      # Publicar resultado del plan como comentario en el PR
      - name: Post Plan result as PR comment
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: "Terraform Plan Result"
          message: |
            ```plaintext
            $(cat plan.txt)
            ```

      # Aplicar cambios
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        working-directory: ./terraform-files
        run: terraform apply -auto-approve

      # Destruir recursos
      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./terraform-files
        run: terraform destroy -auto-approve