name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: terraform-ops
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio del workflow
      - name: Checkout repository
        uses: actions/checkout@v2

      # Clonar el repositorio que contiene los archivos .tf en un subdirectorio 'terraform-files'
      - name: Checkout Terraform repository
        uses: actions/checkout@v2
        with:
          repository: stemdo-labs/terraform-miriam
          path: terraform-files

      # Configurar Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.6

      # Inicializar Terraform desde el subdirectorio donde se clonaron los archivos .tf
      - name: Terraform Init
        working-directory: ./terraform-files
        run: |
          terraform init -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      # run: terraform init -chdir=./terraform-files
      #working-directory: ./terraform-files

      # Planear cambios
      - name: Terraform Plan
        if: github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        working-directory: ./terraform-files
        run: |
          terraform plan -lock=false \
          -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      # - name: Post Plan result as PR comment
      #   if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      #   id: tfplan
      #   run: |
      #     terraform show -json plan.tfout > plan.json
      #     PLAN=$(terraform show -no-color plan.tfout)
      #     echo "Plan output: $PLAN"
      #     echo "::set-output name=plan::$PLAN"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create PR comment with plan
      #   if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
      #   uses: marocchino/sticky-pull-request-comment@v2
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     header: "Terraform Plan"
      #     message: ${{ steps.tfplan.outputs.plan }}

      # Aplicar cambios
      - name: Terraform Apply
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        # env:
        #   ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        #   ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        #   ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        #   ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
            terraform apply -auto-approve  -chdir=./terraform-files \
            -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"
        #working-directory: ./terraform-files

      # Destruir recursos
      - name: Terraform Destroy
        if: github.event_name == 'pull_request'
        # env:
        #   ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        #   ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        #   ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        #   ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
            terraform destroy -auto-approve  -chdir=./terraform-files \
            -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"
        #working-directory: ./terraform-files